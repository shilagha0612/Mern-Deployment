{"ast":null,"code":"var _jsxFileName = \"/Users/shilaghasharma/Desktop/exam_revise/client/src/views/Main.jsx\",\n  _s = $RefreshSig$();\n// import React,{useState,useEffect} from 'react'\n// import { Link } from 'react-router-dom'\n// import List from '../components/List'\n// import Form from '../components/Form'\n// import axios from 'axios'\n\n// const Main = (props) => {\n//     const[note,setNote]=useState(\"\")\n//     const[loaded,setLoaded]=useState(false)\n\n//     useEffect(()=>{\n//         axios.get('http://localhost:8000/api/notes')\n//         .then(res=>{\n//             setNote(res.data);\n//             setLoaded(true)\n//         })\n//         .catch(err=>console.log(err))\n//     }, [])\n//     const removeFromDom= noteId=>{\n//         setNote(note.filter(note=>note._id!=noteId))\n//     }\n\n//   return (\n//     <div>\n//     <Link to={'/add_note'}>Add a note</Link>\n\n//    <hr/>\n//    {loaded && <List note={note} removeFromDom={removeFromDom}/>}\n// </div>\n//   )\n// }\n\n// export default Main\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport List from '../components/List';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = props => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/notes').then(res => {\n      setNotes(res.data);\n      setLoaded(true);\n    }).catch(err => console.log(err));\n  }, []);\n  const removeFromDom = noteId => {\n    setNotes(notes.filter(note => note._id !== noteId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: '/add_note',\n      children: \"Add a note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), loaded && /*#__PURE__*/_jsxDEV(List, {\n      notes: notes,\n      removeFromDom: removeFromDom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"2xQMrJ0N4eC38oJmrD2rPqu5ojo=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","Link","List","axios","jsxDEV","_jsxDEV","Main","props","_s","notes","setNotes","loaded","setLoaded","get","then","res","data","catch","err","console","log","removeFromDom","noteId","filter","note","_id","children","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shilaghasharma/Desktop/exam_revise/client/src/views/Main.jsx"],"sourcesContent":["// import React,{useState,useEffect} from 'react'\n// import { Link } from 'react-router-dom'\n// import List from '../components/List'\n// import Form from '../components/Form'\n// import axios from 'axios'\n\n// const Main = (props) => {\n//     const[note,setNote]=useState(\"\")\n//     const[loaded,setLoaded]=useState(false)\n\n//     useEffect(()=>{\n//         axios.get('http://localhost:8000/api/notes')\n//         .then(res=>{\n//             setNote(res.data);\n//             setLoaded(true)\n//         })\n//         .catch(err=>console.log(err))\n//     }, [])\n//     const removeFromDom= noteId=>{\n//         setNote(note.filter(note=>note._id!=noteId))\n//     }\n\n//   return (\n//     <div>\n//     <Link to={'/add_note'}>Add a note</Link>\n   \n//    <hr/>\n//    {loaded && <List note={note} removeFromDom={removeFromDom}/>}\n// </div>\n//   )\n// }\n\n// export default Main\n\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport List from '../components/List';\nimport axios from 'axios';\n\nconst Main = (props) => {\n  const [notes, setNotes] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/notes')\n      .then(res => {\n        setNotes(res.data);\n        setLoaded(true);\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  const removeFromDom = (noteId) => {\n    setNotes(notes.filter(note => note._id !== noteId));\n  };\n\n  return (\n    <div>\n      <Link to={'/add_note'}>Add a note</Link>\n      <hr />\n      {loaded && <List notes={notes} removeFromDom={removeFromDom} />}\n    </div>\n  );\n};\n\nexport default Main;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACdG,KAAK,CAACU,GAAG,CAAC,iCAAiC,CAAC,CACzCC,IAAI,CAACC,GAAG,IAAI;MACXL,QAAQ,CAACK,GAAG,CAACC,IAAI,CAAC;MAClBJ,SAAS,CAAC,IAAI,CAAC;IACjB,CAAC,CAAC,CACDK,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,aAAa,GAAIC,MAAM,IAAK;IAChCZ,QAAQ,CAACD,KAAK,CAACc,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKH,MAAM,CAAC,CAAC;EACrD,CAAC;EAED,oBACEjB,OAAA;IAAAqB,QAAA,gBACErB,OAAA,CAACJ,IAAI;MAAC0B,EAAE,EAAE,WAAY;MAAAD,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACxC1B,OAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACLpB,MAAM,iBAAIN,OAAA,CAACH,IAAI;MAACO,KAAK,EAAEA,KAAM;MAACY,aAAa,EAAEA;IAAc;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEV,CAAC;AAACvB,EAAA,CAxBIF,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AA0BV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}