{"ast":null,"code":"var _jsxFileName = \"/Users/shilaghasharma/Desktop/exam_revise/client/src/views/Update.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react'\n// import axios from 'axios';\n// import { useParams } from \"react-router-dom\";\n\n// const Update = (props) => {\n//     const { id } = useParams();\n//     const [title, setTitle] = useState('');\n//     const [body, setBody] = useState('');\n//     const [errors, setErrors] = useState([]);\n//     const { removeFromDom } = props;\n\n//     useEffect(() => {\n//         axios.get('http://localhost:8000/api/note/' + id)\n//             .then(res => {\n//                 console.log(\"this is my update page\" , res.data)\n//                 setTitle(res.data.title);\n//                 setBody(res.data.body);\n\n//             })\n//     }, [id]);\n\n//     const updatePerson = e => {\n//         e.preventDefault();\n//         axios.patch('http://localhost:8000/api/note/' + id, {\n//             title,\n//             body,\n\n//         })\n//         .catch(err => {\n\n//             const errorResponse = err.response.data.errors; \n//             console.log(errorResponse)\n//             // Get the errors from err.response.data\n//             const errorArr = []; // Define a temp error array to push the messages in\n//             for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\n//                 errorArr.push(errorResponse[key].message)\n//             }\n//             // Set Errors\n//             setErrors(errorArr);\n//         })\n//     }\n\n//     const deleteNote = (noteId) => {\n//       axios.delete('http://localhost:8000/api/note/' + noteId)\n//         .then(res => {\n//           removeFromDom(noteId);\n//         })\n//         .catch(err => console.error(err));\n//     };\n\n//     return (\n//         <div>\n//             <h1>Update a Person</h1>\n//             <form onSubmit={updatePerson}>\n//                 <p>\n//                     <label>Title</label><br />\n//                     <input type=\"text\" \n//                     name=\"title\" \n//                     value={title} \n//                     onChange={(e) => { setTitle(e.target.value) }} />\n//                 </p>\n//                 <p>\n//                     <label>Body</label><br />\n//                     <input type=\"text\" \n//                     name=\"body\"\n//                     value={body} \n//                     onChange={(e) => { setBody(e.target.value) }} />\n//                 </p>\n\n//                 <input type=\"submit\" />| <button onClick={() => { deleteNote(note._id); }}>Delete</button>\n//             </form>\n//             <p>\n//                 {errors}\n//             </p>\n//         </div>\n//     )\n// }\n\n// export default Update;\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Update = props => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [errors, setErrors] = useState([]);\n  useEffect(() => {\n    axios.get(`http://localhost:8000/api/note/${id}`).then(res => {\n      setTitle(res.data.title);\n      setBody(res.data.body);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, [id]);\n  const updateNote = e => {\n    e.preventDefault();\n    axios.patch(`http://localhost:8000/api/note/${id}`, {\n      title,\n      body\n    }).catch(err => {\n      const errorResponse = err.response.data.errors;\n      const errorArr = [];\n      for (const key of Object.keys(errorResponse)) {\n        errorArr.push(errorResponse[key].message);\n      }\n      setErrors(errorArr);\n    });\n  };\n  const deleteNote = noteId => {\n    axios.delete(`http://localhost:8000/api/note/${noteId}`).then(res => {\n      props.removeFromDom(noteId);\n    }).catch(err => console.error(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Update a Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateNote,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"body\",\n          value: body,\n          onChange: e => setBody(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), \" |\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteNote(id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(Update, \"E/eI2v4lw/Vk/1vW7RdZU+IKhWc=\", false, function () {\n  return [useParams];\n});\n_c = Update;\nexport default Update;\nvar _c;\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","jsxDEV","_jsxDEV","Update","props","_s","id","title","setTitle","body","setBody","errors","setErrors","get","then","res","data","catch","err","console","error","updateNote","e","preventDefault","patch","errorResponse","response","errorArr","key","Object","keys","push","message","deleteNote","noteId","delete","removeFromDom","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["/Users/shilaghasharma/Desktop/exam_revise/client/src/views/Update.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react'\n// import axios from 'axios';\n// import { useParams } from \"react-router-dom\";\n    \n// const Update = (props) => {\n//     const { id } = useParams();\n//     const [title, setTitle] = useState('');\n//     const [body, setBody] = useState('');\n//     const [errors, setErrors] = useState([]);\n//     const { removeFromDom } = props;\n    \n\n//     useEffect(() => {\n//         axios.get('http://localhost:8000/api/note/' + id)\n//             .then(res => {\n//                 console.log(\"this is my update page\" , res.data)\n//                 setTitle(res.data.title);\n//                 setBody(res.data.body);\n               \n//             })\n//     }, [id]);\n    \n//     const updatePerson = e => {\n//         e.preventDefault();\n//         axios.patch('http://localhost:8000/api/note/' + id, {\n//             title,\n//             body,\n            \n//         })\n//         .catch(err => {\n            \n//             const errorResponse = err.response.data.errors; \n//             console.log(errorResponse)\n//             // Get the errors from err.response.data\n//             const errorArr = []; // Define a temp error array to push the messages in\n//             for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\n//                 errorArr.push(errorResponse[key].message)\n//             }\n//             // Set Errors\n//             setErrors(errorArr);\n//         })\n//     }\n\n    \n\n//     const deleteNote = (noteId) => {\n//       axios.delete('http://localhost:8000/api/note/' + noteId)\n//         .then(res => {\n//           removeFromDom(noteId);\n//         })\n//         .catch(err => console.error(err));\n//     };\n    \n//     return (\n//         <div>\n//             <h1>Update a Person</h1>\n//             <form onSubmit={updatePerson}>\n//                 <p>\n//                     <label>Title</label><br />\n//                     <input type=\"text\" \n//                     name=\"title\" \n//                     value={title} \n//                     onChange={(e) => { setTitle(e.target.value) }} />\n//                 </p>\n//                 <p>\n//                     <label>Body</label><br />\n//                     <input type=\"text\" \n//                     name=\"body\"\n//                     value={body} \n//                     onChange={(e) => { setBody(e.target.value) }} />\n//                 </p>\n\n               \n\n//                 <input type=\"submit\" />| <button onClick={() => { deleteNote(note._id); }}>Delete</button>\n//             </form>\n//             <p>\n//                 {errors}\n//             </p>\n//         </div>\n//     )\n// }\n    \n// export default Update;\n\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nconst Update = (props) => {\n  const { id } = useParams();\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [errors, setErrors] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:8000/api/note/${id}`)\n      .then((res) => {\n        setTitle(res.data.title);\n        setBody(res.data.body);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [id]);\n\n  const updateNote = (e) => {\n    e.preventDefault();\n    axios\n      .patch(`http://localhost:8000/api/note/${id}`, {\n        title,\n        body,\n      })\n      .catch((err) => {\n        const errorResponse = err.response.data.errors;\n        const errorArr = [];\n        for (const key of Object.keys(errorResponse)) {\n          errorArr.push(errorResponse[key].message);\n        }\n        setErrors(errorArr);\n      });\n  };\n\n  const deleteNote = (noteId) => {\n    axios\n      .delete(`http://localhost:8000/api/note/${noteId}`)\n      .then((res) => {\n        props.removeFromDom(noteId);\n      })\n      .catch((err) => console.error(err));\n  };\n\n  return (\n    <div>\n      <h1>Update a Note</h1>\n      <form onSubmit={updateNote}>\n        <p>\n          <label>Title</label>\n          <br />\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        </p>\n        <p>\n          <label>Body</label>\n          <br />\n          <input\n            type=\"text\"\n            name=\"body\"\n            value={body}\n            onChange={(e) => setBody(e.target.value)}\n          />\n        </p>\n\n        <input type=\"submit\" /> |{' '}\n        <button onClick={() => deleteNote(id)}>Delete</button>\n      </form>\n      {/* <p>{errors}</p> */}\n    </div>\n  );\n};\n\nexport default Update;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}