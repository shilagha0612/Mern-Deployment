{"ast":null,"code":"var _jsxFileName = \"/Users/shilaghasharma/Desktop/exam_revise/client/src/components/Form.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react'\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import { useNavigate,Link } from 'react-router-dom'\n\n// const Form = (onSubmitProp) => {\n//     const [title, setTitle] = useState(\"\")\n//     const [body, setBody] = useState(\"\")\n//     const navigate = useNavigate();\n\n//     const [errors, setErrors] = useState([]);\n\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         const newNote = {\n//             title, body\n//         }\n//         axios.post(\"http://localhost:8000/api/note\", newNote)\n//             .then((res) => {\n//                 console.log(\"Response\", res)\n//                 onSubmitProp(newNote)\n//                 setTitle(\"\");\n//                 setBody(\"\")\n//                 navigate('/')\n//             })\n//             .catch((err) => {\n//                 if (err.response && err.response.data && err.response.data.errors) {\n//                     const errorResponse = err.response.data.errors;\n//                     const errorArr = [];\n//                     for (const key of Object.keys(errorResponse)) {\n//                         errorArr.push(errorResponse[key].message);\n//                     }\n//                     setErrors(errorArr);\n//                 } else {\n//                     setErrors([\"An error occurred. Please try again.\"]);\n//                 }\n//             });\n//     };\n//     return (\n//         <div>\n//             <Link to={\"/\"}>Home</Link>\n//             <h1>\n//                 Add Note\n//             </h1>\n//             <form onSubmit={handleSubmit}>\n//                 {errors.map((err, index) => <p key={index}>{err}</p>)}\n\n//                 <p>\n//                     <label> Note Title </label>\n//                     <input type='text' value={title} onChange={(e) => setTitle(e.target.value)} />\n\n//                 </p>\n\n//                 <p>\n//                     <label>Body</label>\n//                     <textarea value={body} onChange={(e) => setBody(e.target.value)}></textarea>\n//                 </p>\n\n//                 <p>\n//                     <button type=\"submit\">Submit</button>\n//                 </p>\n\n//             </form>\n\n//         </div>\n//     )\n// }\n\n// export default Form\n\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const navigate = useNavigate();\n  const [errors, setErrors] = useState([]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newNote = {\n      title,\n      body\n    };\n    axios.post(\"http://localhost:8000/api/note\", newNote).then(res => {\n      console.log(\"Response\", res);\n      setTitle(\"\");\n      setBody(\"\");\n      navigate('/');\n    }).catch(err => {\n      if (err.response && err.response.data && err.response.data.errors) {\n        const errorResponse = err.response.data.errors;\n        const errorArr = [];\n        for (const key of Object.keys(errorResponse)) {\n          errorArr.push(errorResponse[key].message);\n        }\n        setErrors(errorArr);\n      } else {\n        setErrors([\"title must be unique.\"]);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [errors.map((err, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: err\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Note Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: body,\n          onChange: e => setBody(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"CRdnNdkvXce0cLYuxHQZaTQ3iGw=\", false, function () {\n  return [useNavigate];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useNavigate","Link","axios","jsxDEV","_jsxDEV","Form","_s","title","setTitle","body","setBody","navigate","errors","setErrors","handleSubmit","e","preventDefault","newNote","post","then","res","console","log","catch","err","response","data","errorResponse","errorArr","key","Object","keys","push","message","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","index","type","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/shilaghasharma/Desktop/exam_revise/client/src/components/Form.jsx"],"sourcesContent":["// import React, { useState } from 'react'\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import { useNavigate,Link } from 'react-router-dom'\n\n\n// const Form = (onSubmitProp) => {\n//     const [title, setTitle] = useState(\"\")\n//     const [body, setBody] = useState(\"\")\n//     const navigate = useNavigate();\n\n\n//     const [errors, setErrors] = useState([]);\n\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         const newNote = {\n//             title, body\n//         }\n//         axios.post(\"http://localhost:8000/api/note\", newNote)\n//             .then((res) => {\n//                 console.log(\"Response\", res)\n//                 onSubmitProp(newNote)\n//                 setTitle(\"\");\n//                 setBody(\"\")\n//                 navigate('/')\n//             })\n//             .catch((err) => {\n//                 if (err.response && err.response.data && err.response.data.errors) {\n//                     const errorResponse = err.response.data.errors;\n//                     const errorArr = [];\n//                     for (const key of Object.keys(errorResponse)) {\n//                         errorArr.push(errorResponse[key].message);\n//                     }\n//                     setErrors(errorArr);\n//                 } else {\n//                     setErrors([\"An error occurred. Please try again.\"]);\n//                 }\n//             });\n//     };\n//     return (\n//         <div>\n//             <Link to={\"/\"}>Home</Link>\n//             <h1>\n//                 Add Note\n//             </h1>\n//             <form onSubmit={handleSubmit}>\n//                 {errors.map((err, index) => <p key={index}>{err}</p>)}\n\n//                 <p>\n//                     <label> Note Title </label>\n//                     <input type='text' value={title} onChange={(e) => setTitle(e.target.value)} />\n\n//                 </p>\n\n//                 <p>\n//                     <label>Body</label>\n//                     <textarea value={body} onChange={(e) => setBody(e.target.value)}></textarea>\n//                 </p>\n\n//                 <p>\n//                     <button type=\"submit\">Submit</button>\n//                 </p>\n\n\n\n\n\n//             </form>\n\n//         </div>\n//     )\n// }\n\n// export default Form\n\n\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Form = () => {\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const navigate = useNavigate();\n\n  const [errors, setErrors] = useState([]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newNote = {\n      title,\n      body\n    };\n    axios.post(\"http://localhost:8000/api/note\", newNote)\n      .then((res) => {\n        console.log(\"Response\", res);\n        setTitle(\"\");\n        setBody(\"\");\n        navigate('/');\n      })\n      .catch((err) => {\n        if (err.response && err.response.data && err.response.data.errors) {\n          const errorResponse = err.response.data.errors;\n          const errorArr = [];\n          for (const key of Object.keys(errorResponse)) {\n            errorArr.push(errorResponse[key].message);\n          }\n          setErrors(errorArr);\n        } else {\n          setErrors([\"title must be unique.\"]);\n        }\n      });\n  };\n\n  return (\n    <div>\n      <Link to=\"/\">Home</Link>\n      <h1>Add Note</h1>\n      <form onSubmit={handleSubmit}>\n        {errors.map((err, index) => (\n          <p key={index}>{err}</p>\n        ))}\n        <p>\n          <label>Note Title</label>\n          <input\n            type=\"text\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        </p>\n        <p>\n          <label>Body</label>\n          <textarea\n            value={body}\n            onChange={(e) => setBody(e.target.value)}\n          ></textarea>\n        </p>\n        <p>\n          <button type=\"submit\">Submit</button>\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}