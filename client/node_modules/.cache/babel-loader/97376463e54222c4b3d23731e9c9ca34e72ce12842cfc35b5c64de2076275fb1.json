{"ast":null,"code":"import _slicedToArray from\"/Users/shilaghasharma/Desktop/exam_revise/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import React, { useState } from 'react'\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import { useNavigate,Link } from 'react-router-dom'\n// const Form = (onSubmitProp) => {\n//     const [title, setTitle] = useState(\"\")\n//     const [body, setBody] = useState(\"\")\n//     const navigate = useNavigate();\n//     const [errors, setErrors] = useState([]);\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         const newNote = {\n//             title, body\n//         }\n//         axios.post(\"http://localhost:8000/api/note\", newNote)\n//             .then((res) => {\n//                 console.log(\"Response\", res)\n//                 onSubmitProp(newNote)\n//                 setTitle(\"\");\n//                 setBody(\"\")\n//                 navigate('/')\n//             })\n//             .catch((err) => {\n//                 if (err.response && err.response.data && err.response.data.errors) {\n//                     const errorResponse = err.response.data.errors;\n//                     const errorArr = [];\n//                     for (const key of Object.keys(errorResponse)) {\n//                         errorArr.push(errorResponse[key].message);\n//                     }\n//                     setErrors(errorArr);\n//                 } else {\n//                     setErrors([\"An error occurred. Please try again.\"]);\n//                 }\n//             });\n//     };\n//     return (\n//         <div>\n//             <Link to={\"/\"}>Home</Link>\n//             <h1>\n//                 Add Note\n//             </h1>\n//             <form onSubmit={handleSubmit}>\n//                 {errors.map((err, index) => <p key={index}>{err}</p>)}\n//                 <p>\n//                     <label> Note Title </label>\n//                     <input type='text' value={title} onChange={(e) => setTitle(e.target.value)} />\n//                 </p>\n//                 <p>\n//                     <label>Body</label>\n//                     <textarea value={body} onChange={(e) => setBody(e.target.value)}></textarea>\n//                 </p>\n//                 <p>\n//                     <button type=\"submit\">Submit</button>\n//                 </p>\n//             </form>\n//         </div>\n//     )\n// }\n// export default Form\n// import React, { useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n// import axios from 'axios';\n// const Form = () => {\n//     const [title, setTitle] = useState('');\n//     const [body, setBody] = useState('');\n//     const navigate = useNavigate();\n//     const [errors, setErrors] = useState([]);\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         const newNote = {\n//           title,\n//           body\n//         };\n//         axios.post(\"http://localhost:8000/api/note\", newNote)\n//           .then((res) => {\n//             console.log(\"Response\", res);\n//             setTitle(\"\");\n//             setBody(\"\");\n//             navigate('/');\n//           })\n//           .catch(err => {\n//             const errorResponse = err.response.data.errors; // Get the errors from err.response.data\n//             const errorArr = []; // Define a temp error array to push the messages in\n//             for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\n//                 errorArr.push(errorResponse[key].message)\n//             }\n//             // Set Errors\n//             setErrors(errorArr);\n//         })\n//       };\n//     return (\n//         <div>\n//             <Link to=\"/\">Home</Link>\n//             <h1>Add Note</h1>\n//             <form onSubmit={handleSubmit}>\n//                 {errors.map((err, index) => (\n//                     <p key={index}>{err}</p>\n//                 ))}\n//                 <p>\n//                     <label>Note Title</label>\n//                     <input\n//                         type=\"text\"\n//                         value={title}\n//                         onChange={(e) => setTitle(e.target.value)}\n//                     />\n//                 </p>\n//                 <p>\n//                     <label>Body</label>\n//                     <textarea\n//                         value={body}\n//                         onChange={(e) => setBody(e.target.value)}\n//                     ></textarea>\n//                 </p>\n//                 <p>\n//                     <button type=\"submit\">Submit</button>\n//                 </p>\n//             </form>\n//         </div>\n//     );\n// };\n// export default Form;\nimport React,{useState}from'react';import{useNavigate,Link}from'react-router-dom';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Form=function Form(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),body=_useState4[0],setBody=_useState4[1];var navigate=useNavigate();var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),errors=_useState6[0],setErrors=_useState6[1];var handleSubmit=function handleSubmit(e){e.preventDefault();var newNote={title:title,body:body};axios.post(\"http://localhost:8000/api/note\",newNote).then(function(res){console.log(\"Response\",res);setTitle(\"\");setBody(\"\");navigate('/');}).catch(function(err){if(err.response&&err.response.data&&err.response.data.errors){var errorResponse=err.response.data.errors;var errorArr=[];for(var _i=0,_Object$keys=Object.keys(errorResponse);_i<_Object$keys.length;_i++){var key=_Object$keys[_i];errorArr.push(errorResponse[key].message);}setErrors(errorArr);}else{setErrors([\"An error occurred. Please try again.\"]);}});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"Home\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Add Note\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[errors.map(function(err,index){return/*#__PURE__*/_jsx(\"p\",{children:err},index);}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Note Title\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:title,onChange:function onChange(e){return setTitle(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Body\"}),/*#__PURE__*/_jsx(\"textarea\",{value:body,onChange:function onChange(e){return setBody(e.target.value);}})]}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"})})]})]});};export default Form;","map":{"version":3,"names":["React","useState","useNavigate","Link","axios","jsx","_jsx","jsxs","_jsxs","Form","_useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","body","setBody","navigate","_useState5","_useState6","errors","setErrors","handleSubmit","e","preventDefault","newNote","post","then","res","console","log","catch","err","response","data","errorResponse","errorArr","_i","_Object$keys","Object","keys","length","key","push","message","children","to","onSubmit","map","index","type","value","onChange","target"],"sources":["/Users/shilaghasharma/Desktop/exam_revise/client/src/components/Form.jsx"],"sourcesContent":["// import React, { useState } from 'react'\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import { useNavigate,Link } from 'react-router-dom'\n\n\n// const Form = (onSubmitProp) => {\n//     const [title, setTitle] = useState(\"\")\n//     const [body, setBody] = useState(\"\")\n//     const navigate = useNavigate();\n\n\n//     const [errors, setErrors] = useState([]);\n\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         const newNote = {\n//             title, body\n//         }\n//         axios.post(\"http://localhost:8000/api/note\", newNote)\n//             .then((res) => {\n//                 console.log(\"Response\", res)\n//                 onSubmitProp(newNote)\n//                 setTitle(\"\");\n//                 setBody(\"\")\n//                 navigate('/')\n//             })\n//             .catch((err) => {\n//                 if (err.response && err.response.data && err.response.data.errors) {\n//                     const errorResponse = err.response.data.errors;\n//                     const errorArr = [];\n//                     for (const key of Object.keys(errorResponse)) {\n//                         errorArr.push(errorResponse[key].message);\n//                     }\n//                     setErrors(errorArr);\n//                 } else {\n//                     setErrors([\"An error occurred. Please try again.\"]);\n//                 }\n//             });\n//     };\n//     return (\n//         <div>\n//             <Link to={\"/\"}>Home</Link>\n//             <h1>\n//                 Add Note\n//             </h1>\n//             <form onSubmit={handleSubmit}>\n//                 {errors.map((err, index) => <p key={index}>{err}</p>)}\n\n//                 <p>\n//                     <label> Note Title </label>\n//                     <input type='text' value={title} onChange={(e) => setTitle(e.target.value)} />\n\n//                 </p>\n\n//                 <p>\n//                     <label>Body</label>\n//                     <textarea value={body} onChange={(e) => setBody(e.target.value)}></textarea>\n//                 </p>\n\n//                 <p>\n//                     <button type=\"submit\">Submit</button>\n//                 </p>\n\n\n\n\n\n//             </form>\n\n//         </div>\n//     )\n// }\n\n// export default Form\n\n\n// import React, { useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n// import axios from 'axios';\n\n// const Form = () => {\n//     const [title, setTitle] = useState('');\n//     const [body, setBody] = useState('');\n//     const navigate = useNavigate();\n\n//     const [errors, setErrors] = useState([]);\n\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         const newNote = {\n//           title,\n//           body\n//         };\n//         axios.post(\"http://localhost:8000/api/note\", newNote)\n//           .then((res) => {\n//             console.log(\"Response\", res);\n//             setTitle(\"\");\n//             setBody(\"\");\n//             navigate('/');\n//           })\n//           .catch(err => {\n//             const errorResponse = err.response.data.errors; // Get the errors from err.response.data\n//             const errorArr = []; // Define a temp error array to push the messages in\n//             for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\n//                 errorArr.push(errorResponse[key].message)\n//             }\n//             // Set Errors\n//             setErrors(errorArr);\n//         })\n//       };\n      \n\n\n//     return (\n//         <div>\n//             <Link to=\"/\">Home</Link>\n//             <h1>Add Note</h1>\n//             <form onSubmit={handleSubmit}>\n//                 {errors.map((err, index) => (\n//                     <p key={index}>{err}</p>\n//                 ))}\n//                 <p>\n//                     <label>Note Title</label>\n//                     <input\n//                         type=\"text\"\n//                         value={title}\n//                         onChange={(e) => setTitle(e.target.value)}\n//                     />\n//                 </p>\n//                 <p>\n//                     <label>Body</label>\n//                     <textarea\n//                         value={body}\n//                         onChange={(e) => setBody(e.target.value)}\n//                     ></textarea>\n//                 </p>\n//                 <p>\n//                     <button type=\"submit\">Submit</button>\n//                 </p>\n//             </form>\n//         </div>\n//     );\n// };\n\n// export default Form;\n\n\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Form = () => {\n    const [title, setTitle] = useState('');\n    const [body, setBody] = useState('');\n    const navigate = useNavigate();\n\n    const [errors, setErrors] = useState([]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const newNote = {\n            title,\n            body\n        };\n        axios.post(\"http://localhost:8000/api/note\", newNote)\n            .then((res) => {\n                console.log(\"Response\", res);\n                setTitle(\"\");\n                setBody(\"\");\n                navigate('/');\n            })\n            .catch((err) => {\n                if (err.response && err.response.data && err.response.data.errors) {\n                    const errorResponse = err.response.data.errors;\n                    const errorArr = [];\n                    for (const key of Object.keys(errorResponse)) {\n                        errorArr.push(errorResponse[key].message);\n                    }\n                    setErrors(errorArr);\n                } else {\n                    setErrors([\"An error occurred. Please try again.\"]);\n                }\n            });\n    };\n\n    return (\n        <div>\n            <Link to=\"/\">Home</Link>\n            <h1>Add Note</h1>\n            <form onSubmit={handleSubmit}>\n                {errors.map((err, index) => (\n                    <p key={index}>{err}</p>\n                ))}\n                <p>\n                    <label>Note Title</label>\n                    <input\n                        type=\"text\"\n                        value={title}\n                        onChange={(e) => setTitle(e.target.value)}\n                    />\n                </p>\n                <p>\n                    <label>Body</label>\n                    <textarea\n                        value={body}\n                        onChange={(e) => setBody(e.target.value)}\n                    ></textarea>\n                </p>\n                <p>\n                    <button type=\"submit\">Submit</button>\n                </p>\n            </form>\n        </div>\n    );\n};\n\nexport default Form;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}